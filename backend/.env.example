# OpenAI Configuration
OPENAI_API_KEY=your_openai_api_key_here

# Redis Configuration (for shared state)
REDIS_URL=redis://localhost:6379

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000

# Environment
ENVIRONMENT=development

# External API Keys (add as needed)
SERPER_API_KEY=your_serper_api_key_here
SHOPIFY_API_KEY=your_shopify_api_key_here
SHOPIFY_API_SECRET=your_shopify_secret_here
SHOPIFY_STORE_URL=your-store.myshopify.com

# Pinecone Configuration
PINECONE_API_KEY=your_pinecone_api_key_here
PINECONE_INDEX_NAME=swallowtail-products
PINECONE_ENVIRONMENT=gcp-starter

# Supabase Configuration
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your_supabase_anon_key_here
SUPABASE_SERVICE_KEY=your_supabase_service_role_key_here

# Database Configuration (Supabase PostgreSQL)
# Transaction pooler for application queries (port 6543)
DATABASE_URL=postgresql://postgres.your-project:password@aws-0-region.pooler.supabase.com:6543/postgres
# Session pooler for migrations (port 5432 on pooler domain)
DATABASE_SESSION_POOLER_URL=postgresql://postgres.your-project:password@aws-0-region.pooler.supabase.com:5432/postgres

# Agent Configuration
MAX_AGENT_ITERATIONS=10
AGENT_TIMEOUT_SECONDS=300

# Logging
LOG_LEVEL=INFO

# TikTok OAuth Configuration
TIKTOK_CLIENT_KEY=sbaw1fo3g3qtdxs0rn
TIKTOK_CLIENT_SECRET=ef03Mn4Ai4B6bbccByHhf7b2faZkSlrW
TIKTOK_REDIRECT_URI=https://skipper-ecom.com/tiktok/callback
TIKTOK_SANDBOX_MODE=true

# Encryption key for storing tokens (generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())")
ENCRYPTION_KEY=your_generated_encryption_key

# CORS Configuration
CORS_ORIGINS=["http://localhost:3000","http://localhost:3001","https://skipper-ecom.com"]