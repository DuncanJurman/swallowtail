"""Add instance management tables

Revision ID: 1acf3a824452
Revises: 76288c6b0a63
Create Date: 2025-07-23 01:27:13.848388

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1acf3a824452'
down_revision: Union[str, Sequence[str], None] = '76288c6b0a63'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instances',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('ECOMMERCE', 'SOCIAL_MEDIA', name='instancetype'), nullable=False),
    sa.Column('business_profile', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('configuration', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_instances_user_id', 'instances', ['user_id'], unique=False)
    op.create_table('instance_agents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('instance_id', sa.UUID(), nullable=False),
    sa.Column('agent_type', sa.String(length=100), nullable=False),
    sa.Column('base_config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('custom_config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['instances.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_instance_agents_instance_id', 'instance_agents', ['instance_id'], unique=False)
    op.create_index('idx_instance_agents_type', 'instance_agents', ['instance_id', 'agent_type'], unique=True)
    op.create_table('instance_media',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('instance_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('storage_path', sa.String(length=500), nullable=False),
    sa.Column('public_url', sa.String(length=500), nullable=True),
    sa.Column('media_category', sa.String(length=50), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['instances.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_instance_media_instance', 'instance_media', ['instance_id'], unique=False)
    op.create_table('instance_tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('instance_id', sa.UUID(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('QUEUED', 'PLANNING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', name='instancetaskstatus'), nullable=False),
    sa.Column('execution_plan', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('result_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('attached_media_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['instance_id'], ['instances.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_instance_tasks_created', 'instance_tasks', ['instance_id', 'created_at'], unique=False)
    op.create_index('idx_instance_tasks_instance_status', 'instance_tasks', ['instance_id', 'status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_instance_tasks_instance_status', table_name='instance_tasks')
    op.drop_index('idx_instance_tasks_created', table_name='instance_tasks')
    op.drop_table('instance_tasks')
    op.drop_index('idx_instance_media_instance', table_name='instance_media')
    op.drop_table('instance_media')
    op.drop_index('idx_instance_agents_type', table_name='instance_agents')
    op.drop_index('idx_instance_agents_instance_id', table_name='instance_agents')
    op.drop_table('instance_agents')
    op.drop_index('idx_instances_user_id', table_name='instances')
    op.drop_table('instances')
    # ### end Alembic commands ###
